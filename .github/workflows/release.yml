name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            goos: linux
            goarch: amd64
          - os: linux
            arch: arm64
            goos: linux
            goarch: arm64
          - os: darwin
            arch: amd64
            goos: darwin
            goarch: amd64
          - os: darwin
            arch: arm64
            goos: darwin
            goarch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -o mcp-terminal-server-${{ matrix.os }}-${{ matrix.arch }} .

    - name: Create archive
      run: |
        if [ "${{ matrix.os }}" = "linux" ]; then
          tar -czf mcp-terminal-server-${{ matrix.os }}-${{ matrix.arch }}.tar.gz mcp-terminal-server-${{ matrix.os }}-${{ matrix.arch }}
        else
          tar -czf mcp-terminal-server-${{ matrix.os }}-${{ matrix.arch }}.tar.gz mcp-terminal-server-${{ matrix.os }}-${{ matrix.arch }}
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: mcp-terminal-server-${{ matrix.os }}-${{ matrix.arch }}
        path: mcp-terminal-server-${{ matrix.os }}-${{ matrix.arch }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Display structure of downloaded files
      run: ls -la artifacts/
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*/mcp-terminal-server-*.tar.gz
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## What's Changed
          
          This release includes automated binary builds for multiple platforms.
          
          ### Downloads
          - **Linux AMD64**: `mcp-terminal-server-linux-amd64.tar.gz`
          - **Linux ARM64**: `mcp-terminal-server-linux-arm64.tar.gz`
          - **macOS AMD64**: `mcp-terminal-server-darwin-amd64.tar.gz`
          - **macOS ARM64**: `mcp-terminal-server-darwin-arm64.tar.gz`
          
          See the full changelog below for detailed changes.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Create development releases for main branch pushes
  dev-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Get commit info
      id: commit
      run: |
        echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "date=$(date -u +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
        
    - name: Delete existing development release
      run: |
        gh release delete dev --yes || true
        git push origin :refs/tags/dev || true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create development release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: dev
        name: "Development Build (${{ steps.commit.outputs.sha }})"
        files: artifacts/*/mcp-terminal-server-*.tar.gz
        draft: false
        prerelease: true
        generate_release_notes: true
        body: |
          ## Development Build
          
          **⚠️ This is an automated development build from the main branch.**
          
          - **Commit**: ${{ github.sha }}
          - **Short SHA**: ${{ steps.commit.outputs.sha }}
          - **Build Date**: ${{ steps.commit.outputs.date }}
          
          ### Downloads
          - **Linux AMD64**: `mcp-terminal-server-linux-amd64.tar.gz`
          - **Linux ARM64**: `mcp-terminal-server-linux-arm64.tar.gz`
          - **macOS AMD64**: `mcp-terminal-server-darwin-amd64.tar.gz`
          - **macOS ARM64**: `mcp-terminal-server-darwin-arm64.tar.gz`
          
          ### Recent Changes
          
          This build includes the latest changes from the main branch.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}